version: "2.4"

services:
  web:
    container_name: web
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    image: web:latest
    restart: always
    ports:
      - 3000:3000
    networks:
      - app_network
    environment:
      - NEXT_PUBLIC_URL=http://localhost:3000
      - NEXT_PUBLIC_GATEWAY=http://krakend:8080/
      - AUTH0_SECRET=e88b927d34a0dfe1af067b49c305b4d95f203e6ab5d5db59ecfd1cd98fcc56b9
      - AUTH0_BASE_URL=http://localhost:3000
      - AUTH0_ISSUER_BASE_URL=https://dev-nydlolpi6mfz5eo3.eu.auth0.com
      - AUTH0_CLIENT_ID=rvqgFs2lofJ7MuvFw1kd4ffC78C5McEO
      - AUTH0_CLIENT_SECRET=1q9Za55OkdZusOLyJf_sSM5VWSPZOYljwoB7aB6RRwa7NNXXVxT0hQkZSFjcwlMB
    depends_on:
      krakend:
        condition: service_started

  rabbitmq:
    image: rabbitmq:3.12-management
    hostname: rabbitmq
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    restart: always
    networks:
      - app_network
    # healthcheck:
    #   test: ["CMD", "rabbitmqctl", "status"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    # volumes:
    #   - ./.rabbitmq_data:/var/lib/rabbitmq/mnesia
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=/

  krakend:
    container_name: krakend
    build:
      context: ./krakend
      dockerfile: ./Dockerfile
    image: krakend:latest
    ports:
      - 8080:8080
    # depends_on:
    #   rabbitmq:
    #     condition: service_healthy
    networks:
      - app_network

  post-service:
    container_name: post-service
    build:
      context: .
      dockerfile: ./apps/post-service/Dockerfile
    restart: always
    ports:
      - 8081:8081
    depends_on:
      # rabbitmq:
      #   condition: service_healthy
      krakend:
        condition: service_started
    image: post-service:latest
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
    networks:
      - app_network

  user-service:
    container_name: user-service
    build:
      context: .
      dockerfile: ./apps/user-service/Dockerfile
    restart: always
    ports:
      - 8082:8082
    depends_on:
      # rabbitmq:
      #   condition: service_healthy
      krakend:
        condition: service_started
    image: user-service:latest
    environment:
      - RABBITMQ_URL=amqp://rabbitmq:5672
    networks:
      - app_network

networks:
  app_network: