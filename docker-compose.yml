version: "2.4"

services:
  rabbitmq:
    image: rabbitmq:3.12-management
    hostname: rabbitmq
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    restart: always
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./.rabbitmq_data:/var/lib/rabbitmq/mnesia
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=/

  krakend:
    container_name: krakend
    build:
      context: ./krakend
      dockerfile: ./Dockerfile
    image: krakend:latest
    ports:
      - 8080:8080
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - app_network

  post-service:
    container_name: post-service
    build:
      context: .
      dockerfile: ./apps/post-service/Dockerfile
    restart: always
    ports:
      - 8081:8081
    depends_on:
      rabbitmq:
        condition: service_healthy
      krakend:
        condition: service_started
    image: post-service:latest
    networks:
      - app_network

  user-service:
    container_name: user-service
    build:
      context: .
      dockerfile: ./apps/user-service/Dockerfile
    restart: always
    ports:
      - 8082:8082
    depends_on:
      rabbitmq:
        condition: service_healthy
      krakend:
        condition: service_started
    image: user-service:latest
    networks:
      - app_network

networks:
  app_network: